<?php
/**
 * TaxApi
 * PHP version 8.1
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 */

/**
 * Accounting API
 *
 * The version of the OpenAPI document: 7.5.5
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Accounting\Api;

use InvalidArgumentException;
use Accounting\Accounting;
use Accounting\ApiException;

/**
 * TaxApi Class Doc Comment
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 */
class TaxApi
{
    /**
     * @var Accounting
     */
    protected Accounting $client;

    /**
     * @param Accounting $client
     */
    public function __construct(Accounting $client)
    {
        $this->client = $client;
    }



    /**
     * Operation getTaxRate
     *
     * Get the latest tax rate for a country
     *
     * @param  string $country The country (required)
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return null|string|array
     *
     * @link https://api.accounting.sh/swagger.html#operation/getTaxRate
     */
    public function getTaxRate(
        string $country,
    ): null|string|array {

        // verify the required parameter 'country' is set
        if ($country === null || (is_array($country) && count($country) === 0)) {
            throw new InvalidArgumentException(
                'Missing the required parameter $country when calling getTaxRate'
            );
        }


        $resourcePath = '/tax/{country}';
        $queryParams = [];
        $headers = [];
        $options = [];



        if ($country !== null) {
            $resourcePath = str_replace(
                '{' . 'country' . '}',
                rawurlencode($country),
                $resourcePath
            );
        }




        if(!empty($headers)) {
            $options['headers'] = $headers;
        }
        $query = http_build_query($queryParams);
        return $this->client->request("GET", $resourcePath . ($query ? "?{$query}" : ''), $options);
    }

    /**
     * Operation verifyVatId
     *
     * Verify a VAT ID
     *
     * @param  string $number The VAT ID (required)
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return null|string|array
     *
     * @link https://api.accounting.sh/swagger.html#operation/verifyVatId
     */
    public function verifyVatId(
        string $number,
    ): null|string|array {

        // verify the required parameter 'number' is set
        if ($number === null || (is_array($number) && count($number) === 0)) {
            throw new InvalidArgumentException(
                'Missing the required parameter $number when calling verifyVatId'
            );
        }


        $resourcePath = '/vat/verify/{number}';
        $queryParams = [];
        $headers = [];
        $options = [];



        if ($number !== null) {
            $resourcePath = str_replace(
                '{' . 'number' . '}',
                rawurlencode($number),
                $resourcePath
            );
        }




        if(!empty($headers)) {
            $options['headers'] = $headers;
        }
        $query = http_build_query($queryParams);
        return $this->client->request("GET", $resourcePath . ($query ? "?{$query}" : ''), $options);
    }

}
