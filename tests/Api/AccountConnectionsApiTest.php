<?php
/**
 * AccountConnectionsApiTest
 * PHP version 8.1
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 */

/**
 * Accounting API
 *
 * The version of the OpenAPI document: 7.5.8
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */

namespace Accounting\Test\Api;

use Accounting\ApiException;
use PHPUnit\Framework\TestCase;
use Accounting\Accounting;
use GuzzleHttp\HandlerStack;
use Accounting\Test\TestHandler;
use PHPUnit\Framework\Attributes\CoversClass;
use PHPUnit\Framework\Attributes\UsesClass;
use Accounting\Api\AccountConnectionsApi;

/**
 * AccountConnectionsApiTest Class Doc Comment
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 *
 * @covers AccountConnectionsApi
 * @uses Accounting
 */
class AccountConnectionsApiTest extends TestCase
{
    /**
     * Test case for deleteAccountConnection
     *
     * Delete an account's connection.
     *
     */
    public function testDeleteAccountConnection()
    {
        $path = "/accounts/{uuid}/connect";
        $path = str_replace('{' . 'uuid' . '}', 'uuid_example', $path);

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("DELETE", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->accountConnections()->deleteAccountConnection('uuid_example', ));
    }

    /**
     * Test case for listAccountConnections
     *
     * List account's connections.
     *
     */
    public function testListAccountConnections()
    {
        $path = "/accounts/{uuid}/connect";
        $path = str_replace('{' . 'uuid' . '}', 'uuid_example', $path);

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("GET", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->accountConnections()->listAccountConnections('uuid_example', 'fields_example', 'page_example', 'perPage_example', ));
    }

    /**
     * Test case for listBanks
     *
     * List available bank connections.
     *
     */
    public function testListBanks()
    {
        $path = "/accounts/{uuid}/connect/banks";
        $path = str_replace('{' . 'uuid' . '}', 'uuid_example', $path);

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("GET", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->accountConnections()->listBanks('uuid_example', 'country_example', ));
    }
}
