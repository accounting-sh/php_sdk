<?php

/**
 * AuthApiTest
 * PHP version 8.1
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 */

/**
 * Accounting API
 *
 * The version of the OpenAPI document: 8.3.16
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */

namespace Accounting\Test\Api;

use Accounting\ApiException;
use PHPUnit\Framework\TestCase;
use Accounting\Accounting;
use GuzzleHttp\HandlerStack;
use Accounting\Test\TestHandler;
use PHPUnit\Framework\Attributes\CoversClass;
use PHPUnit\Framework\Attributes\UsesClass;
use Accounting\Api\AuthApi;

/**
 * AuthApiTest Class Doc Comment
 *
 * @package  Accounting
 * @author   STAN-TAB CORP. LTD
 * @link     https://accounting.sh
 *
 * @covers AuthApi
 * @uses Accounting
 */
class AuthApiTest extends TestCase
{
    /**
     * Test case for authInit
     *
     * Init authentication process.
     *
     */
    public function testAuthInit()
    {
        $path = "/auth/init";

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("GET", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->auth()->authInit());
    }

    /**
     * Test case for login
     *
     * Login user.
     *
     */
    public function testLogin()
    {
        $path = "/auth/login";

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("POST", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->auth()->login(["test" => true], ));
    }

    /**
     * Test case for logout
     *
     * Logout current user.
     *
     */
    public function testLogout()
    {
        $path = "/auth/logout";

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("GET", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->auth()->logout());
    }

    /**
     * Test case for switchCompany
     *
     * Switch to a different company.
     *
     */
    public function testSwitchCompany()
    {
        $path = "/auth/switch";

        $api = new Accounting("fake-token", options: [
            'handler' => HandlerStack::create(new TestHandler("POST", $path, null, "fake-token"))
        ]);
        $this->assertNotNull($api->auth()->switchCompany(["test" => true], ));
    }
}
